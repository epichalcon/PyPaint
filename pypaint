import cv2
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

#load and resize
img = cv2.imread('C:\\Users\\maria\\abuela1.jpg')
img = cv2.resize(img,None, fx = 0.5, fy= 0.5)
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

#disminuir ruido
blur_img = cv2.GaussianBlur(img,(3,3),0)

#resaltar contornos
my_kernel =np.array([[0,-1,0],[-1,5,-1],[0,-1,0]])
shar_img = cv2.filter2D(img,-1,my_kernel)

#Visualizar imagenes:
fig, axs = plt.subplots(1,3, figsize=(20,5))
axs[0].imshow(img)
axs[0].set_title('Original Image')
axs[0].axis('off')

axs[1].imshow(blur_img)
axs[1].set_title('Blurred Image')
axs[1].axis('off')

axs[2].imshow(shar_img)
axs[2].set_title('Sharpened Image')
axs[2].axis('off')

plt.show()
cv2.waitKey(0)

#Normalizing:
data=shar_img/255.0
data=data.reshape(-1,3)

#K-means
kmeans = KMeans(30)
kmeans.fit(data)
y_est = kmeans.predict(data) #cluster center 
new_colors=kmeans.cluster_centers_[kmeans.labels_] #backproject to the color centers

#3D point cloud

fig= plt.figure(figsize=(10,7))
ax= fig.add_subplot(projection='3d')
data_sampled=data[::50] #1 punto cada 50 (velocidad)
ax.scatter(data_sampled[:,0], data_sampled[:,1],data_sampled[:,2], marker='.', color=data_sampled)
ax.set_title('3D Point Cloud of Original Data')
ax.set_xlabel('R')
ax.set_ylabel('G')
_=ax.set_zlabel('B')

# 3d despu√©s de Kmeans
fig = plt.figure(figsize=(10,7))
ax = fig.add_subplot(projection = '3d')
data_sampled = new_colors[::50]
ax.scatter(data_sampled[:,0], data_sampled[:,1],data_sampled[:,2], marker='.', color= data_sampled, s=200)
ax.set_title('3D Point Cloud of Kmeans Data')
ax.set_xlabel('R')
ax.set_ylabel('G')
_=ax.set_zlabel('B')

plt.show()
cv2.waitKey(0)
